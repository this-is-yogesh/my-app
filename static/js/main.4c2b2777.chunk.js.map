{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","moding","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","togglered","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","backgroundColor","onChange","event","console","log","target","rows","newtext","toUpperCase","alerthere","toLowerCase","split","join","document","getElementById","select","navigator","clipboard","writeText","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","aboutText","App","mode","setMode","_useState3","_useState4","setAlert","showAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.4c2b2777.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.moding} bg-${props.moding}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link> */}\r\n          </li>\r\n          \r\n        </ul>\r\n         {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form>  */}\r\n      </div>\r\n      <div className={`form-check form-switch text-${props.moding ==='dark' ? 'white' : 'dark'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\"  id=\"flexSwitchCheckChecked\" onClick={props.togglered} />\r\n  <label className=\"form-check-label\"  htmlFor=\"flexSwitchCheckChecked\">Enable Darkmode</label>\r\n</div> \r\n    </div>\r\n    \r\n  </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title:PropTypes.string.isRequired,\r\n    aboutText:PropTypes.string.isRequired}\r\n\r\nNavbar.defaultProps ={\r\n    title:\"Default Title\",\r\n    aboutText:\"Default About\"\r\n}","import React , {useState}from 'react'\r\n\r\nexport default function Textform(props) {\r\n  \r\n const [text, setText ] = useState (\"\");\r\n\r\n const handleupclick= ()=>{\r\n    console.log(\"On click was clicked\" )\r\n    let newtext = text.toUpperCase();\r\n    setText(newtext)\r\n    props.alerthere(\"Converted to Uppercase\" , \"success\")\r\n }\r\n\r\n const handlelowclick= ()=>{\r\n    console.log(\"On click was clicked\" )\r\n    let newtext = text.toLowerCase();\r\n    setText(newtext)\r\n    props.alerthere(\"Converted to Lowercase\" , \"success\")\r\n }\r\n\r\n const handleremoveextraspace= ()=>{\r\n   let newtext = text.split(/[ ]+/)\r\n   setText(newtext.join(\" \"))\r\n   props.alerthere(\"Extra Spaces Removed\" , \"success\")\r\n }\r\n\r\n const handlecopytext=()=>{\r\n   var text = document.getElementById(\"myBox\")\r\n   text.select()\r\n   navigator.clipboard.writeText(text.value)\r\n   props.alerthere(\"Copied To Clipboard\" , \"success\")\r\n }\r\n\r\n const handlecleartext=()=>{\r\n  let newtext = \"\";\r\n setText(newtext)\r\n  props.alerthere(\"Text Cleared\" , \"success\")\r\n}\r\n\r\n \r\n    \r\n const handleonchange= (event)=>{\r\n    console.log(\"On change \")\r\n    setText(event.target.value)\r\n }\r\n\r\n\r\n    return (\r\n        <>\r\n    <div className='container' style={{ color :props.moding ==='dark' ? 'white' : '#042743'}}>\r\n <h1>{props.heading}</h1>\r\n<div className=\"mb-3\">\r\n  <textarea className=\"form-control\" id=\"myBox\" value = {text } style = {{backgroundColor :props.moding ==='dark' ? '#042743' : 'white', color :props.moding ==='dark' ? 'white' : '#042743'}}\r\n  onChange={handleonchange} rows=\"8\"></textarea>  {/* the color style in the txt area\r\n  signfies the color of the txt written in the text box */}\r\n</div>\r\n<button className=\"btn btn-primary mx-1\" onClick= {handleupclick}>Convert to Uppercase</button>\r\n<button className=\"btn btn-primary mx-1\" onClick= {handlelowclick}>Convert to Lowercase</button>\r\n<button className=\"btn btn-primary mx-1\" onClick= {handleremoveextraspace}>Remove Extra Space</button>\r\n<button className=\"btn btn-primary mx-1\" onClick= {handlecopytext}>Copy Text</button>\r\n<button className=\"btn btn-primary mx-1\" onClick= {handlecleartext}>Clear Text</button>\r\n\r\n    </div>\r\n\r\n    <div className=\"container my-2\" style={{ color :props.moding ==='dark' ? 'white' : '#042743'}}>\r\n        <h1>Your text summary</h1>\r\n        <p> {text.split(\" \").length } words , {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").length } Minutes Read</p>\r\n        <h2> Preview</h2>\r\n        <p>{text.length>0 ? text : \"Write something in the textbox to preview it here \"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n  const capitalize = (word) =>{\r\n    let lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n\r\n  return (\r\n     props.alert && <div className={ `alert alert-${props.alert.type} alert-dismissible fade show `}role=\"alert\">\r\n<strong> {capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n</div>\r\n    \r\n  )\r\n}\r\n","\nimport './App.css';\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//  Routes,\n//   Route,\n// } from \"react-router-dom\";\n\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('white')\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message,type )=>{\n\n    setAlert({\n      msg : message,\n      type : type\n    })\n\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const handletoggle=()=>{\n    if(mode === 'white'){\n      setMode('dark')\n      document.body.style.backgroundColor='#042743'\n      showAlert(\"Dark Mode Has Been Enabled\" , \"success\");\n\n      \n    }\n    else{\n      setMode('white')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light Mode Has Been Enabled\" , \"success\");\n    }\n  }\n  return (\n  <>\n  \n<Navbar  title=\"TextUtils\" aboutText=\"About TextUtils\" moding={mode} togglered={handletoggle}/>\n<div className=\"container my-3\">\n  <Alert  alert = {alert}/>\n  {/* <Routes>\n          <Route exact path=\"/about\"   element = {<About />}/>\n          <Route exact path=\"/\"     element = {<Textform  alerthere={showAlert} heading=\"Enter the text to analyze\" moding={mode} />}/>\n        </Routes> */}\n<Textform  alerthere={showAlert} heading=\"Enter the text to analyze\" moding={mode} />\n</div> \n\n</>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}